from tkinter import *
from tkinter import ttk
import webbrowser
from datetime import datetime
from tkinter import messagebox
root = Tk()
root.geometry("1680x1000")
root.title("Энциклопедия по Killing Floor")
root.resizable(width = False, height = False)

bg_image = PhotoImage(file="C:/Users/Admin/Desktop/уэээ))/kf03.png")
bg_label = Label(root, image=bg_image)
bg_label.place(x = 0, y = 0, relwidth = 1, relheight = 1) 

frame = Frame(root)
frame.place(relx = 0.05, rely = 0.05,height = 50, width = 1500)

title = Label(root, text ='Добро пожаловать в Ад', bg="#FFFFFF", fg='#000000', font=('Arial', 16))
title.pack()
title = Label(frame, text ='Оглавление:', bg="#FFFFFF", fg='#000000', font='16')
title.place(relx = 0.20, rely = 0.05)
title = Label(frame, text ='Подзаголовок:', bg="#FFFFFF", fg='#000000', font='16')
title.place(relx = 0.70, rely = 0.05)

chapters = ["Введение","Игровой процесс","Магазин","Классы","Мутанты","Патриарх"]
class_subchapters = ["Описание","Медик","Техник","Снайпер","Коммандос","Берсеркер","Поджигатель","Подрывник"]
zed_subchapters = ["Зомби","Берсеркер","Толстяк","Ползун","Хаск","Сталкер","Сирена","Мясник","Отбивальщик"]
combobox = ttk.Combobox(values = chapters, state = 'readonly')
combobox.place(relx = 0.30, rely = 0.055, width = 200)
combobox.set('Выберите главу')

sub_combobox = ttk.Combobox(state = 'readonly')
sub_combobox.place(relx = 0.75, rely = 0.055, width = 200)
sub_combobox.set('')

text = Text(root, font = ('Arial', 12))
text.place(relx = 0.30, rely = 0.15, width=700, height=300)

frame = Frame(root)
frame.place(relx = 0.30, rely = 0.50, width=700, height=300)

img_label = Label(frame)
img_label.place(x = 0, y = 0, relwidth = 1, relheight = 1)

#==========================================================================
def feedback():
    stat = Toplevel(root)
    stat.geometry("800x550")
    stat.title("Обратная связь")
    stat.resizable(width = False, height = False)
    stat_image = PhotoImage(file="C:/Users/Admin/Desktop/уэээ))/relax.png")
    stat_label = Label(stat, image=stat_image)
    stat_label.place(x = 0, y = 0, relwidth = 1, relheight = 1)
    stat_label.image = stat_image
    title = Label(stat, text ='Форма обратной связи', bg="#FFFFFF", fg='#000000', font=('Arial', 16))
    title.pack()
    #===========================Имя=========================================
    name = Label(stat, text='Ваше имя:')
    name.pack()
    name_entry = Entry(stat, width=40)
    name_entry.pack(pady=5)
    #===========================Email=======================================
    email = Label(stat, text='Ваш email:')
    email.pack()
    email_entry = Entry(stat, width=40)
    email_entry.pack(pady=5)
    #===========================Оценка======================================
    mark = Label(stat, text='Оцените энциклопедию:')
    mark.pack()
    rating_var = IntVar()
    for i in range(1,6):
        mark_btn = Radiobutton(stat, text=str(i), variable=rating_var, value=i)
        mark_btn.pack()
    #======================Комментарий======================================
    comment = Label(stat, text='Оставьте комментарий:')
    comment.pack()
    comment_text = Text(stat, width=50, height=8)
    comment_text.pack(pady=5)
    def save_feedback():
        name = name_entry.get()
        email = email_entry.get()
        rating = rating_var.get()
        comment = comment_text.get("1.0", END).strip()
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        if not name or not rating:
            messagebox.showerror("Ошибка", "Пожалуйста, заполните имя и оценку!")
            return
        try:
            with open("C:/Users/Admin/Desktop/уэээ))/feedback.txt", "a", encoding="utf-8") as f:
                f.write(f"Дата: {timestamp}\n")
                f.write(f"Имя: {name}\n")
                f.write(f"Email: {email}\n")
                f.write(f"Оценка: {rating}/5\n")
                f.write(f"Комментарий: {comment}\n")
                f.write("="*50 + "\n")
            messagebox.showinfo("Спасибо!", "Ваш отзыв сохранен!")
            stat.destroy()
        except Exception as e:
            messagebox.showerror("Ошибка", f"Не удалось сохранить файл: {str(e)}")

    save = Button(stat, text="Отправить", command=save_feedback)
    save.pack(pady=10)
stat = Button(root, text = 'Обратная связь', command = feedback)
stat.pack()

content = {
    'Введение': "Killing Floor - кооперативный хоррор-шутер на выживание с видом от первого лица, действие которого разворачивается на улицах заброшенных городов и предместьях Британии незадолго после неудачного эксперимента по созданию и клонированию «суперсолдат». Вы и ваши товарищи — члены войск вооруженных сил, сброшенных в эти места с простой задачей — выжить как можно дольше, зачистив зону высадки от последствий неудачного эксперимента!",
    'Игровой процесс': "В игре существует два режима. Первый - выживание, второй - режим задач. В режиме выживания игрокам предстоит выдержать некоторое количество волн (4,7,10), отбиваясь от монстров. Конечной целью является убийство босса, а предыдущие волны являются некой подготовкой к нему. Суть режима задач в том, что игроки должны выполнять определённые задания, дабы продвинуться дальше. В игре 4 уровня сложности, который влияет на показатели монстров и выдаваемые деньги. Чем больше сложность, тем сильнее враги и тем меньше заработанная валюта.",
    'Магазин': "Магазин располагается за стальной дверью, которых на карте несколько. В левом верхнем углу есть стрелка, которая показывает направление, а также перед игроком прокладывается короткий путь. В магазине можно купить различные виды вооружения, а также бронежилет, который уменьшает получаемый урон и гранаты. Деньги зарабатываются при убийстве монстров и при продаже ненужного оружия.",
    'Классы': {
        'Описание': "Всего в игре 7 играбельных классов. Каждый имеет различные бонусы к характеристикам, а также увеличенный урон от использования профильного оружия. С прокачкой уровня класса всё это увеличивается. На максимальном 6 уровне у класса, со старта появляется его профильное оружие.",
        'Медик': "Несмотря на то, что каждый игрок может лечить себя самостоятельно, медик делает это эффективней и быстрей любого другого класса. По мере повышения уровня перка, он получает бонусы в обращении с медицинскими ПП и в разы уменьшает их стоимость. Имеет бонусы к скорости перемещения, эффективности лечения. Бронежилет защищает лучше и стоит меньше. Имеет уникальные медицинские гранаты, которые лечат союзников и отравляют врагов.",
        'Техник': " Получает бонусы в обращении с дробовиками, лучше заваривает двери, не позволяя противникам пройти, может нести больше веса, несет больше гранат и урон от его гранат лучше, чем у других перков, за исключением Подрывника. Для улучшения нужно набирать урон дробовиками и получать очки заваривания дверей.",
        'Снайпер': "В основном пользуется медленной винтовкой, крупнокалиберными пистолетами и прочим снайперским вооружением. Получает бонусы в обращении со снайперским оружием, неавтоматическим оружием и пистолетами, урон в голову от его оружия выше. Для улучшения нужны только выстрелы в голову из неавтоматического оружия.",
        'Коммандос': "Коммандос устраивает тотальное истребление всему крадущемуся, ползающему и прыгающему. Ничего не ускользает от его взора, он видит даже невидимых Сталкеров, также видит здоровье противников. Получает бонусы в обращении с автоматами. Для улучшения перка нужно убивать Сталкеров и наносить урон с автоматов.",
        'Берсеркер': "Сильный класс, особенно при поддержке хорошего медика, Получает бонусы в обращении с оружием ближнего боя, бонусы к скорости ударов и перемещения, получаемый урон уменьшается. Его не могут схватить зомби. Для улучшения нужно наносить урон оружием ближнего боя. Слабых мутантов превращает в кровавый фарш, а к сильным применяет классическую тактику ударил-отбежал.",
        'Поджигатель': "Получает бонусы в обращении с огнемётом и оружием с зажигательными боеприпасами, устойчив к огню. Начиная с пятого уровня его гранаты поджигают врага. Для улучшения нужно наносить урон огнём. Только у Огнемётчика оружие стреляет зажигательными пулями. Данный класс требует внимательной и аккуратной игры, а некоторые монстры могут накинуться на игрока, будучи подожженными. Класс будет удобен при выжигании зомбаков на коридорных картах.",
        'Подрывник': "Мастер по ловушкам, может клепать собственные бомбы, стрелять из гранатомета и создает очень много дыма. Получает бонусы в обращении со взрывчаткой и гранатомётами, устойчив к взрывам. Для улучшения нужно наносить урон взрывами."
    },
    'Мутанты': {
        'Зомби': "Обычный мутант, клон сына Патриарха. Выглядит как невысокий, лысый, голый гуманоид, без гениталий и носа. Его руки и лицо покрыты кровью. Его тело покрыто разнообразными круглыми этикетками, оставшимися после медицинских экспериментов. Зомби медленно идут к игроку, выбирая самый прямой путь. Когда они подошли к кому-нибудь, они схватят, и будут удерживать игрока, постоянно атакуя его.",
        'Берсеркер': "Он обладает большой скоростью, и будет бежать к игроку, если находится на достаточно близком расстоянии. Его лезвие наносит большое количество урона, по сравнению с обычным зомби, 15 единиц урона за удар на нормальном уровне сложности.",
        'Толстяк': "Толстый мутант, более живучий, чем Зомби. Может как изрыгать желчь на игроков с небольшого расстояния, так и бить ножом мясника, подойдя в упор. Толстяк выглядит как голое, толстое и лысое существо с желтухой, и также покрытое сыпью.",
        'Ползун': "Быстрый, малозаметный, и довольно опасный в больших количествах. Выглядит как существо черного цвета с белыми точками. У него 6 глаз, нет носа, две антенны, ладони похожие на человеческие с когтями на конце, и разные длинные отростки по всему телу.",
        'Хаск': "Единственный стреляющий противник, не считая Патриарха, довольно опасен в группах. Атакует огненной смесью на дальнее расстояние, и, подойдя вплотную, атакует врукопашную.",
        'Сталкер': "Женщина-мутант. Слабая и быстрая, обладает способностью делать себя невидимой. Из-за ее малого количества здоровья, большой скорости, невидимости и склонности к преследованию игроков напрямую она часто может войти в зону огня до того, как игроки узнают о ее существовании. Однако, для игроков, использующих взрывчатку или Огнемет без хорошего сопротивления огню она - угроза, которая может привести к смерти игроков; или от прямых повреждений, или впоследствии выпущенных снарядов, попавших в нее непреднамеренно, как в препятствие с близкого расстояния.",
        'Сирена': "Медленная женщина-мутант, клонированная жена Патриарха, криком снижает здоровье и уничтожает гранаты/взрывчатку/ракеты. Сирена склонна к укрытию позади других существ, когда она приближается, что делает ее менее заметной. Если вы ее заметили, она должна рассматриваться как главная цель и быть убита как можно быстрее.",
        'Мясник': "Большой мутант, вооруженный бензопилой. Он идет целенаправленно к игроку, и, получив некоторый урон, может значительно ускорить своё движение. В бою Мясник может нанести несколько сильных ударов бензопилой, чем замедляет движение игрока.",
        'Отбивальщик': "Очень сильный мутант, впервые появляющийся на последних волнах. Чрезвычайно опасный в ярости в которую он приходит от атак игроков, набрасываясь на них и перемалывая своими похожими на камнедробилки руками. Из-за того, что Отбивальщика нельзя оглушить, самый безопасный путь истребления Отбивальщика - делать это быстро, пока у него не появилась возможность разозлиться самому, и пока он не нанес урона игрокам."
    },
    'Патриарх': "Патриарх - главный босс Killing Floor. На высоких уровнях сложности один в состоянии уничтожить команду игроков, появляется после последней волны. Он большого роста, вместо его левой руки имеет пулемёт и ракетницу, которыми атакует на расстоянии. Также он может передвигаться с огромной скоростью и вплотную наносить сильные удары, которые способны отбросить игрока. В случае получения большого количества урона, он становится невидимым и убегает, чтобы излечиться, а вместо себя выпускает нескольких «простых» мутантов. Также он может стать невидимым во время боя. Однако его сила компенсируется его «недостатками»: его невидимость такая же, как у Сталкера (видно на средней дистанции), а перед выстрелом из пулемёта или ракетницы он производит подготовку (что даёт время скрыться)."
}

image_path = {
    'Введение': "C:/Users/Admin/Desktop/уэээ))/kftitle.png",
    'Игровой процесс': "C:/Users/Admin/Desktop/уэээ))/kfgameplay.png",
    'Магазин': "C:/Users/Admin/Desktop/уэээ))/kfshop.png",
    'Классы': {
        'Описание': "C:/Users/Admin/Desktop/уэээ))/kfclasses.png",
        'Медик': "C:/Users/Admin/Desktop/уэээ))/kfmedic.png",
        'Техник': "C:/Users/Admin/Desktop/уэээ))/kfsupport.png",
        'Снайпер': "C:/Users/Admin/Desktop/уэээ))/kfsharpshooter.png",
        'Коммандос': "C:/Users/Admin/Desktop/уэээ))/kfcommando.png",
        'Берсеркер': "C:/Users/Admin/Desktop/уэээ))/kfberserker.png",
        'Поджигатель': "C:/Users/Admin/Desktop/уэээ))/kffirebug.png",
        'Подрывник': "C:/Users/Admin/Desktop/уэээ))/kfdemolitionist.png"
    },
    'Мутанты': {
        'Зомби': "C:/Users/Admin/Desktop/уэээ))/kfclot.png",
        'Берсеркер': "C:/Users/Admin/Desktop/уэээ))/kfgorefast.png",
        'Толстяк': "C:/Users/Admin/Desktop/уэээ))/kfbloat.png",
        'Ползун': "C:/Users/Admin/Desktop/уэээ))/kfcrawler.png",
        'Хаск': "C:/Users/Admin/Desktop/уэээ))/kfhusk.png",
        'Сталкер': "C:/Users/Admin/Desktop/уэээ))/kfstalker.png",
        'Сирена': "C:/Users/Admin/Desktop/уэээ))/kfsiren.png",
        'Мясник': "C:/Users/Admin/Desktop/уэээ))/kfscrake.png",
        'Отбивальщик': "C:/Users/Admin/Desktop/уэээ))/kffleshpound.png"
    },
    'Патриарх': "C:/Users/Admin/Desktop/уэээ))/kfpatriarch.png"
}

current_image = None

def update_text():
    global current_image
    text.config(state = 'normal')
    text.delete('1.0', END)
    selected_chapter = combobox.get()
    sub_chapter = sub_combobox.get()
    
    img_label.config(image='')
    current_image = None
    
    if selected_chapter in content:
            if isinstance(content[selected_chapter], dict):
                if sub_chapter in content[selected_chapter]:
                    text.insert(END, content[selected_chapter][sub_chapter])
                    if selected_chapter in image_path and sub_chapter in image_path[selected_chapter] and image_path[selected_chapter][sub_chapter]:
                        try:
                            current_image = PhotoImage(file=image_path[selected_chapter][sub_chapter])
                            img_label.config(image=current_image)
                        except:
                            pass
            else:
                text.insert(END, content[selected_chapter])
                if selected_chapter in image_path and image_path[selected_chapter]:
                    try:
                        current_image = PhotoImage(file=image_path[selected_chapter])
                        img_label.config(image=current_image)
                    except:
                        pass
    text.config(state='disabled')

def update(event):
    selected_chapter = combobox.get()
    if selected_chapter == "Классы":
        sub_combobox["values"] = class_subchapters
        sub_combobox.set('Описание')
    elif selected_chapter == "Мутанты":
        sub_combobox["values"] = zed_subchapters
        sub_combobox.set('Зомби')
    else:
        sub_combobox["values"] = []
        sub_combobox.set('')
    update_text()

combobox.bind("<<ComboboxSelected>>", update)
sub_combobox.bind("<<ComboboxSelected>>", lambda e: update_text())

root.mainloop()